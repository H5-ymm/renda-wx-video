<style lang="less">
@import '../style/modal.less';
  .footer-btn {
    width: 86%;
    margin: 0 auto;
  }
  .pickerDate {
    .modal_box {
      min-height: 45%;
    }
  }
  
 .picker {
    height: 500rpx;
    background: #fff;
    width: 100%;
    .picker-btn {
      height: 100rpx;
      border-bottom: 1px solid #eee;
      padding: 0 24rpx;
      color: #6a6a6a;
      .ok-btn {
        color: #1890FF;
      }
    }
    .picker-view {
      height: 480rpx;
      text-align: center;
      width: 100%;
      .picker-view-item {
        line-height: 100rpx;
      }
    }
  }
</style>
<template>
	<picker mode="multiSelector" value="{{valueArray}}" range="{{rangeValues}}" @columnchange="handleColumnChange" @change="handleValueChange" @cancel="handleCancel">
  <slot></slot>
</picker>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import $moment from 'moment'
const leftPad0 = function(v, n) {
      if (!v) {
        v = "";
      }
      let prefix = "";
      for (let i = 0; i < n; i++) {
        prefix += "0";
      }
      return (prefix + v).substr(-n);
    };
    const stringToDate = function(str) {
      str = str.replace(/-/g, "/");
      return new Date(str);
    };
    const isLeapYear = function(year) {
      if (((year % 4) == 0) && ((year % 100) != 0) || ((year % 400) == 0)) {
        return true;
      }
      return false;
    };
    const now = new Date();
    const years = [];
    const beginYear = 1990;
    for (var i = beginYear; i <= now.getFullYear(); i++) {
      years.push(i + "年");
    }
    const months = [];
    for (var i = 0; i < 12; i++) {
      months.push(leftPad0(i + 1, 2) + "月");
    }
    const days = [];
    for (var i = 0; i < 31; i++) {
      days.push(leftPad0(i + 1, 2) + "日");
    }
    const hours = [];
    for (var i = 0; i < 24; i++) {
      hours.push(leftPad0(i, 2) + "时");
    }
    const minutes = [];
    for (var i = 0; i < 60; i++) {
      minutes.push(leftPad0(i, 2) + "分");
}
export default class pickerModal extends wepy.component {
	props = {
	  value: String,
    dateValue: {
      type: Date
    }
	}
	data = {
		valueArray: [0, 0, 0, 0, 0],
    rangeValues: [
      years,
      months,
      days,
      hours,
      minutes
    ],
    pickerYear: beginYear,
    pickerMonth: 1
	}
  _dateToValueArray(date) {
    return [date.getFullYear() - beginYear, date.getMonth(), date.getDate() - 1, date.getHours(), date.getMinutes()];
  }
  _settMonthDays(year, month) {
    let monthDays = 31;
    switch (month) {
      case 2:
        monthDays = 28;
        if (isLeapYear(year)) {
          monthDays = 29;
        }
        break;
      case 4:
      case 6:
      case 9:
      case 11:
        monthDays = 30;
        break;
    }
    let days = [];
    for (let i = 0; i < monthDays; i++) {
      days.push(leftPad0(i + 1, 2) + "日");
    }
    this.pickerYear = year
    this.pickerMonth = month
    this.rangeValues[2] = days
    // this.$apply()
    console.log(this.rangeValues)
  }
  getNum(num) {
    return num < 10 ? '0' + num : num
  }
	methods = {
    bindChange: function (e) {
      this.value = e.detail.value
    },
		handleClose () {
			this.isShow = false
			this.$apply()
			this.$emit('handleClose')
    },
     handleColumnChange(e) {
      if (e.detail.column > 1) return false;
      let year = this.pickerYear;
      let month = this.pickerMonth;
      if (e.detail.column == 0) {
        year = e.detail.value + beginYear;
      } else if (e.detail.column == 1) {
        month = e.detail.value + 1;
      }
      this._settMonthDays(year, month);
    },
    handleValueChange(e) {
      let dateArr = [];
      for (let i in e.detail.value) {
        let v = this.rangeValues[i][e.detail.value[i]];
        dateArr.push(v.toString().substr(0, v.length - 1))
      }
      let dateString = dateArr[0] + "-" + dateArr[1] + "-" + dateArr[2] + " " + dateArr[3] + ":" + dateArr[4] + ":00";
      let params = {
        date: stringToDate(dateString),
        dateString
      }
      this.$emit('change', params)
    }
  }
	watch = {
    value(val) {
      console.log(val)
      this.valueArray = this._dateToValueArray(stringToDate(val))
      console.log(this.valueArray)
      this.$apply()
    },
    dateValue(date) {
      this.valueArray = this._dateToValueArray(date)
      this.$apply()
    },
    valueArray(val) {
      this._settMonthDays(val[0] + beginYear, val[1] + 1);
    }
	}
}
</script>
