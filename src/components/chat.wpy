
<style lang="less">
 @import '../../style/message.less';
</style>
<template>
  <view id="scroll">
    <view class="page_margin">
      <repeat wx:for="{{messageList}}" wx:key="index">
        <view wx:if="{{(uid!=item.from&&item.type!='TIMCustomElem') || (uid!=item.from&&item.type=='TIMCustomElem'&&item.action&&item.action!=5)}}">
          <view class="date">{{item.time}}</view>
          <view class="weui-flex dialogBox-col weui-flex__item start">
            <image mode="scaleToFill" src="{{userProfile.avatar}}" class="dialogBox-col-header" wx:if="{{userProfile.avatar}}"/>
            <image mode="scaleToFill" src="https://a.rsd123.com/image/images/default1.png" class="dialogBox-col-header" wx:else/>
            <view class="dialogBox-content dialogBox-content-left weui-flex start">
              <view wx:if="{{item.type=='TIMTextElem'}}" >{{item.text}}</view>
            </view>
          </view>
        </view>
        <view class="weui-flex wrap dialogBox-col weui-flex__item end" wx:if="{{(uid==item.from&&item.type!='TIMCustomElem')||(uid==item.from&&item.type=='TIMCustomElem'&&item.action&&item.action!=5)}}">
          <view class="page__desc date">{{item.time}}</view>
          <view class="dialogBox-content weui-flex start dialogBox-content-right">
            <view wx:if="{{item.type=='TIMTextElem'}}">{{item.text}}</view>
          </view>
          <image mode="scaleToFill" src="{{userInfo.head_img}}" class="dialogBox-col-header" wx:if="{{userInfo.head_img}}"/>
          <image mode="scaleToFill" src="https://d.rsd123.com/uploads/images/user.png" class="dialogBox-col-header" wx:else/>
        </view>
      </repeat>
    </view>
    <view class="weui-flex between page_margin">
      <input class="weui-input weui-flex__item" value="{{message}}" @blur="blurInput" @confirm="inputBind" confirm-type="send" placeholder="请输入...."/>
      <image mode="scaleToFill" @tap="showMessageBtn" src="https://d.rsd123.com/uploads/images/company/add.png" class="dialogBox_icon" />
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { wxNavigateTo, wxToast } from '@/util'
import $moment from 'moment'
import wxs from '../../filterWxs/actionFilter.wxs'
import COS from 'cos-wx-sdk-v5'
wx.$app.registerPlugin({'cos-wx-sdk': COS})
wxs = { wxs }
export default class chat extends wepy.component {
  props = {
    item: Object
  }
  data = {
    TIM: null,
    messageList: [],
  }
  _initIM () {
    wx.$app.off( this.TIM.EVENT.MESSAGE_RECEIVED, this._onIMMessageReceived);
    wx.$app.on(this.TIM.EVENT.MESSAGE_RECEIVED, this._onIMMessageReceived, this)
  }
  onLoad () {
		wx.setStorageSync('hangRoom', false)
		this.TIM = this.$parent.$parent.globalData.TIM
		this.params.uid = options.userID
		this.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.userInfo = wx.getStorageSync('userInfo') ? JSON.parse(wx.getStorageSync('userInfo')): {}
		this.rendaUserType = wx.getStorageSync('rendaUserType')
		this.$apply()
		if (options.toUser) {
			this.toUserId = options.toUser
			this.conversationID = 'C2C' + this.toUserId
		} else {
			this.conversationID = options.query
			this.toUserId = options.userID
		}
		this.getConversationProfile()
		this.getMessage()
  }
  // 滚动到列表bottom
  scrollToBottom () {
	  wx.pageScrollTo({
			scrollTop: 99999
		})
	}
  getMessage() {
	  let query = {conversationID: this.conversationID, count: 15}
		let promise2 = wx.$app.getMessageList(query)
		promise2.then(imResponse => {
			const messageList = imResponse.data.messageList; // 消息列表。
			this.messageList = this.getNewList(messageList)
			console.log(this.messageList)
			this.scrollToBottom()
			this.$apply()
			let interval = setInterval(() => {
				if (this.messageList.length !== 0) {
					this.scrollToBottom()
					clearInterval(interval)
				}
			}, 600)
		}).catch(imError => {
			console.warn('messageList error:', imError); // 登录失败的相关信息
		});
  }
  getNewList(list) {
		let messageObj = {}
		let img
		let arr = list.map(item=> {
			const { payload, to, from, time, type } = item
			let date = time
			date = $moment.unix(date).format('YYYY-MM-DD HH:mm')
			if (type ==  'TIMTextElem') {
				messageObj =	Object.assign(payload, { to, from, time: date,type })
			}
			return messageObj
		})
		return arr
  }
  getConversationProfile() {
		let conversationID = 'C2C' + this.uid
		let promise =  wx.$app.getConversationProfile(this.conversationID);
		promise.then(imResponse => {
			// 获取成功
			const { userProfile } = imResponse.data.conversation
			this.userProfile = userProfile
			this.$apply() // 会话资料
		}).catch(function(imError) {
			console.warn('getConversationProfile error:', imError); // 获取会话资料失败的相关信息
		});
  }
  sendMessageApi(value) {
		let message = wx.$app.createTextMessage({ to: this.toUserId, conversationType: this.TIM.TYPES.CONV_C2C, payload: { text: value } });
		let promise1 = wx.$app.sendMessage(message);
		promise1.then(imResponse => {
			console.log('发送成功')
			let message = {
				to: this.toUserId,
				from: this.uid,
				text: value,
				time: $moment().format('YYYY-MM-DD HH:mm'),
				type: 'TIMTextElem'
			}
			this.messageList.push(message)
			this.$apply()
			this.scrollToBottom()
			// this.changeHeight()
			this.message = ''
		}).catch(function (imError) {
			console.warn('sendMessage error:', imError); // 获取会话列表失败的相关信息
		});
	}
  methods = {
    inputBind(e) {
			this.message = e.detail.value
			if (!this.message) {
				return wxToast('消息不能为空')
			}
		  this.sendMessageApi(this.message)
		}
  }
}
</script>