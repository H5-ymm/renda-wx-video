<style lang="less">
@import '../style/modal.less';
.welfare_modal {
  .modal-content {
    width: 94%;
    margin: 0 auto;
    .modal-title {
      padding: 30rpx 10rpx 30rpx 0;
    }
    .card-item {
      font-size: 28rpx;
      margin-bottom: 20rpx;
      padding: 6rpx 16rpx;
    }
  }
}
</style>
<template>
	<view hidden='{{isScaleModal}}'>
		<view @tap=" handleClose" wx:if="{{isShow}}" class="modal_mask"></view>
		<view class="modal_box welfare_modal transition3s {{ isShow ? 'g_scale1': ''}}" style="height:400rpx">
			<view class="modal-content">
				<view class="modal-title weui-flex between">
          <view class="page__title">企业福利</view>
          <view class="page__text__active" @tap="handleBenefitOk">确定</view>
        </view>
        <view class="weui-flex between wrap">
          <repeat  wx:for="{{benefitsList}}" wx:key="index">
            <view class="card-item {{item.disabled?'active': ''}}" @tap="selectBenefit({{item}}, {{index}})">{{item.title}}</view>
          </repeat>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
export default class welfareModal extends wepy.component {
	props = {
		isScaleModal: Boolean
	}
	data = {
    isShow: false,
    idList: [],
    benefitsNameList: [],
    benefitsList: []
  }
  getBenefitsList() {
		$http('/Constant/getBenefitsList', {}).then(res => {
      let arr = res.data
      this.benefitsList = arr.map(item =>{
        item.disabled = false
        return item
      })
      this.$apply()
		})
  }
  events = {
    getBenefitsArr: data => {
      this.idList = data
      if (this.idList.length) {
        this.idList.forEach(ele => {
          this.benefitsList.forEach(val => {
            if(Number(ele) == val.id) {
              val.disabled = true
              this.benefitsNameList.push(val.title)
              this.$apply()
            }
          })
        })
        let params = {
          benefitsNameList: this.benefitsNameList.join(','),
          idList: this.idList.join(',')
        }
        this.$emit('handleBenefitOk', params) 
      } 
      this.$apply()
    }
  }
  onLoad() {
    this.getBenefitsList()
  }
	methods = {
		handleClose () {
			this.isShow = false
			this.$apply()
			this.$emit('handleClose')
		},
		handleBenefitOk () {
			this.isShow = false
      this.$apply()
      let params = {
        benefitsNameList: this.benefitsNameList.join(','),
        idList: this.idList.join(',')
      }
			this.$emit('handleBenefitOk', params)
    },
    selectBenefit(item, index) {
      console.log(item)
      console.log(this.idList)
      this.benefitsList[index].disabled = !item.disabled
			if (this.idList.indexOf(item.id + '') === -1) {
        this.idList.push(item.id)
        this.benefitsNameList.push(item.title)
			} else {
				let ret = this.idList.findIndex(v => {
					return Number(v) === item.id
				})
        this.idList.splice(ret, 1)
        this.benefitsNameList.splice(ret, 1)
      }
      this.idList = Array.from(new Set(this.idList))
      console.log(this.idList)
      this.benefitsNameList = Array.from(new Set(this.benefitsNameList))
      console.log(this.benefitsNameList)
      this.$apply()
    }
	}
	watch = {
		isScaleModal (val) {
			if (!val) {
        this.isShow = true
			} else {
				this.isShow = false
			}
			this.$apply()
		}
	}
}
</script>
