<style lang="less">
@import '../style/modal.less';
.footer-btn {
  width: 86%;
  margin: 0 auto;
}
 .picker {
    height: 420rpx;
    background: #fff;
    width: 100%;
    .picker-btn {
      height: 80rpx;
      border-bottom: 1px solid #eee;
      padding: 0 24rpx;
      color: #6a6a6a;
      .ok-btn {
        color: #1890FF;
      }
    }
    .picker-view {
      text-align: center;
      width: 100%;
      height: 300rpx;
      .picker-view-item {
        line-height: 80rpx;
      }
    }
  }
</style>
<template>
	<view hidden='{{isScaleModal}}'>
		<view @tap=" handleClose" wx:if="{{isShow}}" class="modal_mask"></view>
		<view class="modal_box transition3s {{ isShow ? 'g_scale1': ''}}" id="modal-box" style="height:{{height}}rpx">
			<view class="modal-content">
        <view class="picker">
					<view class="weui-flex between picker-btn">
						<view class="weui-flex center" @tap="selectClose">
							取消
						</view>
						<view class="weui-flex center ok-btn" @tap="selectOk">
							确定
						</view>
					</view>
					<picker-view class="picker-view" indicator-class="picker-box" indicator-style="height: 40px;font-size:16px;" value="{{value}}" @change="bindChange">
						<picker-view-column>
							<repeat wx:for="{{range}}" wx:key="index">
								<view class="picker-view-item">{{item}}</view>
							</repeat>
						</picker-view-column>
					</picker-view>
				</view>
			</view>
		</view>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
export default class pickerModal extends wepy.component {
	props = {
		isScaleModal: Boolean,
	  value: Number,
		range: Array,
		type: String
	}
	data = {
	  multiIndex: 0,
    isScaleModal: true,
    isShow: false,
    multiText: '',
    isSelect: false
	}
	methods = {
		selectOk() {
      this.isScaleModal = !this.isScaleModal 
      if (this.multiIndex == -1 ||!this.isSelect) {
        this.multiIndex = 0
      }
      this.multiText = this.range[this.multiIndex]
			this.$apply()
			this.$emit('pickerChange', this.multiText)
      this.$emit('bindPickerChange', this.multiIndex)
    },
    bindChange(e) {
      this.isSelect = true
      this.multiIndex = e.detail.value
      this.$apply()
    },
    selectClose() {
      this.isSelect = false
      this.isScaleModal = !this.isScaleModal
      this.$apply()
    }
	}
	watch = {
		isScaleModal (val) {
			if (!val) {
				this.isShow = true
			} else {
				this.activeIndex = 0
				this.isShow = false
			}
			this.$apply()
		}
	}
}
</script>
