<style lang="less">
@import '../style/modal.less';
.footer-btn {
  width: 86%;
  margin: 0 auto;
}
 .picker {
    height: 420rpx;
    background: #fff;
    width: 100%;
    .picker-btn {
      height: 80rpx;
      border-bottom: 1px solid #eee;
      padding: 0 24rpx;
      color: #6a6a6a;
      .ok-btn {
        color: #1890FF;
      }
    }
    .picker-view {
      text-align: center;
      width: 100%;
      height: 300rpx;
      .picker-view-item {
        line-height: 80rpx;
      }
    }
  }
</style>
<template>
	<view hidden='{{isScaleModal}}'>
		<view @tap=" handleClose" wx:if="{{isShow}}" class="modal_mask"></view>
		<view class="modal_box transition3s {{ isShow ? 'g_scale1': ''}}" id="modal-box" style="height:{{height}}rpx">
			<view class="modal-content">
        <view class="picker">
        <view class="weui-flex between picker-btn">
          <view class="weui-flex center" @tap="selectClose">
            取消
          </view>
          <view class="weui-flex center ok-btn" @tap="selectOk">
            确定
          </view>
        </view>
        <picker-view class="picker-view" indicator-class="picker-box" indicator-style="height: 40px;font-size:16px;" value="{{activeIndex}}" @change="bindChange">
          <picker-view-column>
            <repeat wx:for="{{list}}" wx:key="index">
              <view class="picker-view-item">{{item}}</view>
            </repeat>
          </picker-view-column>
          <picker-view-column>
            <repeat wx:for="{{list}}" wx:key="index">
              <view class="picker-view-item">{{item}}</view>
            </repeat>
          </picker-view-column>
        </picker-view>
      </view>
			</view>
		</view>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
export default class pickerModal extends wepy.component {
	props = {
		isScaleModal: Boolean,
		height: {
			type: Number,
			default: 520
		},
		list: Array
	}
	data = {
		isShow: false,
		activeIndex: [],
		rendaUserType: 0
	}
	onLoad () {
		this.rendaUserType = wx.getStorageSync('rendaUserType')
	}
	methods = {
		handleClose () {
			this.isShow = false
			this.$apply()
			this.$emit('handleClose')
		},
		selectType (index) {
			this.activeIndex = index
			this.$apply()
		},
		handleOk () {
			this.isShow = false
			this.$apply()
			this.$emit('selectOk', this.activeIndex)
		}
	}
	watch = {
		rendaUserType (val) {
			if (val) {
				if (this.menus[0].title == '切换团队') {
					this.activeIndex = val === 2 ? 1 : 0
				} else {
					this.activeIndex = 0
				}
				this.$apply()
			}
		},
		isScaleModal (val) {
			if (!val) {
				this.isShow = true
			} else {
				this.activeIndex = 0
				this.isShow = false
			}
			this.$apply()
		}
	}
}
</script>
