<style lang="less">
.page-home {
  height: 100%;
  .section {
    padding-bottom: 20rpx;
    .job-box {
      margin-top: 16rpx;
      .job-title {
        height: 88rpx;
        font-size: 32rpx;
        color: #111111;
        padding: 0 30rpx;
        font-weight: 500;
      }
      .home_icon {
        width: 35rpx;
        height: 35rpx;
        margin-right: 10rpx;
      }
      .card-item{
        &.lecture-item {
          color: #111111;
          font-weight: bold;
          font-size: 32rpx;
        }
      }
      .job-search {
        .job-search-query {
          padding: 0 0 20rpx;
          margin: 0 30rpx;
        }
        .job-search-item {
          font-size: 24rpx;
          color: rgba(17, 17, 17, 0.6);
          .card-item {
            padding: 4rpx 16rpx;
            font-size: 23rpx;
            margin-right: 60rpx;
          }
        }
      }
    }
  }
  .nav {
    margin: 0 0 -40rpx;
    .card_icon {
      height: 176rpx;
    }
  }
}
</style>
<template>
  <view class="page-home">
    <scroll-view scroll-y="true" refresher-enabled="true" @scrolltolower="searchScrollLower"
     class="page" @refresherrefresh="bindrefresherrefresh">
      <banner></banner>
      <view class="weui-flex between nav">
        <image mode="widthFix" class="card_icon" @tap="viewLecture(0)" src="https://d.rsd123.com/uploads/images/nav_icon1.png"/>
        <image mode="widthFix" class="card_icon" @tap="viewLecture(1)" src="https://d.rsd123.com/uploads/images/nav_icon2.png"/>
      </view>
      <view class="section">
        <view class="job-box">
          <view class="job-title weui-flex start">
            <image mode="widthFix" class="home_icon" src="../../images/home_icon.png"/>
            <view>视频招聘会({{count}})</view>
            <!-- <view class="card-item lecture-item" @tap="viewLecture">空中宣讲会</view> -->
          </view>
          <view class="job-search">
            <view class="job-search-query weui-flex start">
              <view class="weui-flex around job-search-item">
                <repeat wx:for="{{statusList}}" wx:key="index">
                  <view class="card-item weui-flex center {{index == activeIndex ? 'active': ''}}" @tap="showModal({{index}})">{{item}}</view>
                </repeat>
              </view>
            </view>
          </view>
          <jobFairList :list.sync="list" :usertype.sync="usertype" @routerHall="routerHall" @booking="booking"></jobFairList>
        </view>
      </view>  
    </scroll-view>
  <actionSheet :isScaleModal.sync="isScaleModal" :text.sync="text" :okText.sync="okText" @handleClose="handleClose" @handleOk="handleOk"></actionSheet>
 </view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import $moment from 'moment'
import { getImgUrl, wxToast, wxNavigateTo, wxRedirectTo, contactPhone } from '@/util.js'
import banner from '@/components/banner'
import actionSheet from '@/components/actionSheet'
import jobFairList from '@/components/jobFairList'
import { getStore } from 'wepy-redux'
import { getAllUser, getUser } from '@/store/actions/user.js'
import { getAllContant } from '@/store/actions/contant.js'
const store = getStore()
export default class teamView extends wepy.page {
  components = {
    banner: banner,
    jobFairList: jobFairList,
    actionSheet: actionSheet
  }
  data = {
    rendaUserTeamType: 0,
    params: {
      uid: '',
      page: 1,
      limit: 10,
      status: ''
    },
    list: [],
    isScaleModal: true,
    count: 0,
    activeIndex: 0,
    statusList: ['全部', '进行中', '待举办'],
    openid: '',
    uid: '',
    usertype: 0,
    TIM: null,
    text: '',
    okText: ''
  }
  config = {
    navigationBarTitleText: '首页',
    enablePullDownRefresh: true
  }
  events = {
    searchValue: keywords => {
      this.params = Object.assign(this.params, { keywords })
      this.getJobfairList()
    },
    handleClose: () => {
      wx.showTabBar()
      this.isScaleModal = !this.isScaleModal
      this.$apply()
    },
    handleOk: () => {
      if (!wx.getStorageSync('rendaPerfect')) {
        wxNavigateTo('/pages/my/companyForm') 
      } else {
        contactPhone()
      }
      wx.showTabBar()
      this.isScaleModal = !this.isScaleModal
      this.$apply()
    },
    booking: data => {
      // 订展先判断是否完善信息
      // 完善信息之后企业订展是否审核
      // 审核之后
      if (!wx.getStorageSync('rendaPerfect')) {
        wx.hideTabBar()
        this.okText = '完善信息'
        this.text = '企业信息不完整，请前往完善'
        this.isScaleModal = !this.isScaleModal
        this.$apply()
        return
      }
      if (!data.applyinfo && data.is_finish != 1) {
        this.addjobfair(data)
      }
      wx.setStorageSync('addjobfair', JSON.stringify(data.applyinfo))
    },
    routerHall: data => {
      if (!this.usertype) {
        wx.hideTabBar()
        this.isScaleModal = !this.isScaleModal
        this.$apply()
      } else {
        this.addjfUser(data.id)
        wx.setStorageSync('rendaJHID', data.id)
        wx.setStorageSync('addjobfair', JSON.stringify(data.applyinfo))
        wxNavigateTo('/pages/home/hall?query=' + data.id) 
      }
    }
  }
  addjobfair(data) {
    let params = {
      uid: this.params.uid,
      jf_id: data.id
    }
    $http('/Jobfair/addjobfair', params).then(res => {
      if (res.data) {
        this.getJobfairList()
        if (data.is_audit == 1) {
          this.text = '企业订展正在审核中，请联系客服021-51991869'
          this.isScaleModal = !this.isScaleModal
          this.okText = '联系客服'
          this.$apply()
        } else {
          wxToast('申请订展成功')
        }    
      } else {
        wxToast('申请订展失败')
      }
    })
  }
  addjfUser(jf_id) {
    let params = {
      uid: this.params.uid,
      jf_id
    }
    $http('/Jobfair/addjf_user', params).then(res => {
      console.log(res)
    })
  }
  checkUserLogin(openid) {
    store.dispatch(getAllUser({ openid })).then(res => {
      if (!res.payload.usertype) {
        wx.clearStorageSync();
        wxToast('请授权登录')
        wxNavigateTo('/pages/login/welcome')
      } else {
        this.params.uid = res.payload.id
        wx.setStorageSync('rendaUid', res.payload.id)
        this.usertype = res.payload.usertype
        this.$parent.globalData.rendaUserType = res.payload.usertype
        store.dispatch(getUser({uid: this.params.uid }, this.usertype))
        this.$apply()
        this.getJobfairList()
        this.getUserSig()
      }
    }).catch(error => {
    })
  }
  getJobfairList() {
    $http('/Jobfair/getJobfairList', this.params).then(res => {
      let arr = []
      arr = res.data.data ? res.data.data : []
      arr.forEach(item => {
        item.endtime = $moment.unix(item.endtime).format('YYYY-MM-DD HH:ss')
        item.starttime = $moment.unix(item.starttime).format('YYYY-MM-DD HH:ss')
      })
      this.list = arr
      this.count = res.data.count
      this.$apply()
    })
  }
  methods = {
    viewImg(item){
      wx.previewImage({
        current: item, // 当前显示图片的http链接
        urls: this.pdfList // 需要预览的图片http链接列表
      })
    },
    viewLecture(index){
      if (index == 0 ) {
        let query = {
          uid: this.params.uid,
          rendaUserType: this.usertype,
          rendaPerfect: wx.getStorageSync('rendaPerfect')
        }
        wxNavigateTo(`/pages/lecture/list`)
      } else {
        wxToast('敬请期待')
      }
    },
    viewInfo(item) {
      wxNavigateTo(item.url)
    },
    viewDetail(item) {
      wxNavigateTo('/pages/companyView/viewJob?query=' + item.id + '&apply=1')
    },
    searchScrollLower() {
      if (this.count > this.list.length && this.count > this.params.limit) {
        this.params.limit = this.params.limit + 10
        this.getJobfairList()
      }
    },
    showModal(index) {
      this.activeIndex = index
      if (index == 0) {
        this.params.status = ''
      } else if (index == 1) {
        this.params.status = index
      } else {
        this.params.status = 0
      }
      this.getJobfairList()
    }
  }
  _initIM () {
    wx.$app.off( this.TIM.EVENT.SDK_READY, this._onIMReady);
    // wx.$app.off( this.TIM.EVENT.ERROR, this._onIMError)
    // 监听事件)
    wx.$app.on( this.TIM.EVENT.SDK_READY, this._onIMReady, this);
    // wx.$app.on( this.TIM.EVENT.ERROR, this._onIMError, this)
  }
  _onIMError (event) {
    // 网络错误不弹toast && sdk未初始化完全报错
    if (event.data.message && event.data.code && event.data.code !== 2800 && event.data.code !== 2999) {
      wxToast(event.data.message)
    }
  }
  getUserSig() {
    $http('/autograph/getAutograph', { uid: this.params.uid + '' }).then(res => {
      // this.userSig =  res.data
      wx.setStorageSync('userSig', res.data)
      let promise = wx.$app.login({ userID: this.params.uid + '', userSig: res.data });
      promise.then(imResponse => {
        this._initIM()
        console.log('登录成功')
        if (imResponse.data.repeatLogin === true) {
          // 标识账号已登录，本次登录操作为重复登录。v2.5.1 起支持
          console.log(imResponse.data.errorInfo);
        }
      }).catch(imError => {
        console.warn('login error:', imError); // 登录失败的相关信息
      });
    })
  }
  getConversationProfile() {
		let conversationID = 'C2C' + this.params.uid
		let promise =  wx.$app.getConversationProfile(conversationID);
		promise.then(imResponse => {
			const { userProfile } = imResponse.data.conversation
      wx.setStorageSync('userProfile', JSON.stringify(userProfile))
      console.log('获取个人信息')
			this.$apply() // 会话资料
		}).catch(function(imError) {
			console.warn('getConversationProfile error:', imError); // 获取会话资料失败的相关信息
		});
  }
  updateMyProfile () {
    let userInfo = wx.getStorageSync('wxInfo')?JSON.parse(wx.getStorageSync('wxInfo')):{}
    let promise = wx.$app.updateMyProfile(userInfo)
    promise.then(imResponse => {
      wx.setStorageSync('userProfile', JSON.stringify(imResponse.data))
      console.log(imResponse.data); // 更新资料成功
      console.log('更新个人信息')
    }).catch(function(imError) {
      console.warn('updateMyProfile error:', imError); // 更新资料失败的相关信息
    });
  }
  _onIMReady() {
    if (wx.getStorageSync('wxInfo')) {
      this.updateMyProfile() 
    } else {
      this.getConversationProfile()
    }
    // this.videoInit()
  }
  getOpenId() {
    wx.login({
      success: res=> {
        if (res.code) {
          $http('/Login/getopenid', { code: res.code }).then(res => {
            let data = JSON.parse(res.data)
            this.openid = data.openid || ''
            if (this.openid) {
              this.$parent.globalData.openId = data.openid
              this.$parent.globalData.sessionKey = data.session_key
              wx.setStorageSync('session_key', data.session_key)
              wx.setStorageSync('rendaOpenId', data.openid)
              this.checkUserLogin(this.openid)       
            } else {
              wx.clearStorageSync();
              wxToast('请授权登录')
              wx.redirectTo({
                url: '/pages/login/welcome' // 页面 A
              });
            } 
          }).catch(error => {
            console.log(error)
          })
        } else {
          console.log('获取失败！' + res.errMsg)
        }
      }
    })
  }
  bindrefresherrefresh() {
    this.onShow()
  }
  onShow() {
    wx.showTabBar()
    this.TIM = this.$parent.globalData.TIM
    if (wx.getStorageSync('rendaOpenId') && wx.getStorageSync('session_key')) {
      this.openid = wx.getStorageSync('rendaOpenId')
      this.checkUserLogin(this.openid)
    } else {
      this.getOpenId()
    }
    store.dispatch(getAllContant())
  }
}
</script>
