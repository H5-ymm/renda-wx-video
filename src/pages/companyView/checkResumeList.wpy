<style lang="less">
@import '../../style/home.less';
@import '../../style/resume.less';
.video-tip {
  width: 100%;
  height: 38rpx;
  line-height: 38rpx;
  margin: 10rpx auto 20rpx;
  background: rgba(255, 186, 189, 0.5);
  border-radius: 19rpx;
  font-size: 22rpx;
  text-align: center;
  color: #ee696e;
}
.video-switch {
  width: 50%;
  height: 58rpx;
  line-height: 58rpx;
  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.2);
  border-radius: 29rpx;
  font-size: 28rpx;
  margin: 0 auto 20rpx;
  .video-switch-col1 {
    text-align: center;
    color: #fff;
    width: 50%;
    line-height: 58rpx;
    text-align: center;
    color: #999999;
    background: #fff;
    border-radius: 29px 0px 0px 29px;
    &.video-switch-active {
      color: #fff;
      background: rgba(24, 144, 255, 1);
    }
    &.video-switch-col2 {
      border-radius: 0 29px 29px 0px;
      overflow: hidden;
    }
  }
}
</style>
<template>
	<view class="detail-view">
		<view class="weui-flex between header-box">
			<tabBar :tabBarList.sync="tabBarList" wx:if="{{!isSeachWidth}}"></tabBar>
			<search class="search-box {{isSeachWidth?'weui-flex__item':''}}" @searchValue="searchValue">
			</search>
		</view>
		<view class="page_margin view-detail">
			<scroll-view scroll-y="true" style="height:100%">
				<view class="video-tip" wx:if="{{isBatch&&viewType==2&&receiptType!=3}}">提示：每次视频面试最多邀请8人 建议：根据实际情况设置面试时间</view>
				<view class="video-switch weui-flex between" wx:if="{{!isBatch&&receiptType!=3}}">
					<view class="video-switch-col1 {{viewType==1?'video-switch-active':''}}" @tap="switchView('1')">正常面试</view>
					<view class="video-switch-col1 video-switch-col2 {{viewType==2?'video-switch-active':''}}" @tap="switchView('2')">视频面试</view>
				</view>
				<companyResumeList :list.sync="newList" @handleResumeVideo="handleResumeVideo" :viewType.sync="viewType" :receiptType.sync="receiptType" :isBatch.sync="isBatch" :isCheck.sync="isCheck" @viewDetail="viewDetail" @handleResume="handleResume" @selectResume="selectResume">
				</companyResumeList>
			</scroll-view>
		</view>
		<view wx:if="{{list.length}}">
			<view wx:if="{{isCheckBtn || (check&&!isShowOverBtn)}}" class="create-btn footer-box">
				<view class="weui-flex center footer-box-item" wx:if="{{!isBatch}}">
					<view class="weui-flex__item item-btn weui-flex center" @tap="batchHandle" wx:if="{{(!check||!statusObj.is_video&&viewType==2)&&receiptType<3}}">
						<!-- 批量操作 -->
						{{viewType==1?'批量正常面试':'批量视频面试'}}
					</view>
					<view wx:if="{{receiptType==3&&!check}}" class="weui-flex__item item-btn weui-flex center" @tap="batchHandle">
						批量操作
					</view>
					<view wx:if="{{statusObj.view_time||statusObj.is_video}}" class="weui-flex__item footer-box-item weui-flex center item-btn" @tap="viewNotice">
						<text wx:if="{{receiptType==1&&viewType==1}}">查看面试通知</text>
						<text wx:if="{{receiptType==1&&viewType==2}}">通知记录</text>
						<text wx:if="{{receiptType>1}}">查看入职通知</text>
					</view>
				</view>
				<view class="weui-flex between footer-box-item" wx:if="{{isBatch}}">
					<view class="item-col">
						<image src="https://a.rsd123.com/image/images/user/radio2.png" wx:if="{{isCheck}}" @tap="selectResumeAll({{isCheck}})" alt="" mode="aspectFill" class="radio-icon" />
						<image src="https://a.rsd123.com/image/images/user/radio1.png" wx:else @tap="selectResumeAll({{isCheck}})" mode="aspectFill" class="radio-icon" />
						全选
					</view>
					<view class="page_card_status-resume weui-flex center item-col" wx:if="{{!statusObj.invoice_status||viewType==1}}">
						<button class="weui-btn_cell  weui-flex__item weui-btn_primary" @tap="setResumeStatus(1)">
							通过
						</button>
						<button class="weui-btn_cell weui-flex__item weui-btn_primary_plain" @tap="setResumeStatus(2)">
							拒绝
						</button>
					</view>
					<view class="page_card_status-resume weui-flex center item-col" wx:else>
						<button class="weui-btn_cell  weui-flex__item weui-btn_primary" @tap="setNotice">
							设置视频面试通知
						</button>
					</view>
				</view>
			</view>
			<view wx:if="{{!isCheckBtn&&check}}" class="weui-flex between only-btn">
				<!-- <view wx:if="{{isShowOverBtn}}" class="weui-flex center weui-flex__item only-btn-item">
					<button class="weui-btn_cell  weui-flex__item weui-btn_primary" @tap="overView">
						{{receiptType===1?'提前结束面试':'提前结束入职'}}
					</button>
				</view> -->
				<view wx:if="{{receiptType==2&&statusObj.interview_status>=3&&statusObj.entry_status}}" class="weui-flex weui-flex__item center only-btn-item">
					<button class="weui-btn_cell  weui-flex__item weui-btn_primary_plain" @tap="viewEntry">
						查看入职
					</button>
				</view>
			</view>
		</view>
	 <!-- </view> -->
		<noticeModal :isScaleModal.sync="isNoticeModal" :height.sync="modalHeight" @setAllTime="setAllTime" :timeInfo.sync="timeInfo" :title.sync="title" :type.sync="viewType"></noticeModal>
		<viewNoticeModal :isScaleModal.sync="isModal" :height.sync="modalHeight" :timeInfo.sync="timeInfo" :title.sync="title"></viewNoticeModal>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import noticeModal from '@/components/noticeModal'
import tabBar from '@/components/tabBar'
import search from '@/components/search'
import companyResumeList from '@/components/companyResumeList'
import viewNoticeModal from '@/components/viewNoticeModal'
import { getList, wxNavigateTo, wxShowModal, wxToast, wxReLaunch } from '@/util'
export default class checkResumeList extends wepy.page {
	components = {
		tabBar: tabBar,
		noticeModal: noticeModal,
		search: search,
		companyResumeList: companyResumeList,
		viewNoticeModal: viewNoticeModal
	}
	data = {
		tabBarList: [],
		list: [],
		params: {
			uid: '',
			page: 1,
			limit: 500,
			status: '',
			type: 1
		},
		count: 0,
		isBatch: false,
		isCheck: false,
		activeIndex: 0,
		isSeachWidth: false,
		isModal: true,
		modalHeight: 920,
		title: '',
		receiptType: 1,
		statusObj: {},
		job_id: '',
		timeInfo: {},
		id: '',
		check: false,
		viewType: '1',
		isNoticeModal: true,
		userSig: '',
		checkObj: {},
		isCheckAll: false,
		resume_id: ''
	}
	computed = {
		newList () {
			return getList(this.list, 'addtime')
		},
		// 获取简历初筛，面试名单，入职名单列表url
		urlApi () {
			return this.receiptType === 1 ? '/company/auditResumeList' : this.receiptType === 2 ? '/company/entryRecommendResumeList' : '/company/entryUserRecommendResumeList'
		},
		checkUrlAPI () {
			return this.receiptType === 1 ? '/company/auditResumeRecommend' : this.receiptType === 2 ? '/company/auditInterviewResumeRecommend' : '/company/updateEntryUser'
		},
		timeUrlApi () {
			return this.receiptType === 1 ? '/company/editInterviewTime' : '/company/editEntryTime'
		},
		overViewAndEntry () {
			return this.receiptType === 1 ? '/company/endInterview' : '/company/endEntry'
		},
		isCheckBtn () {
			return (this.receiptType === 1 && this.statusObj.invoice_status < 2) ||
				(this.receiptType === 2 && this.statusObj.interview_status < 5) ||
				(this.receiptType === 3 && this.statusObj.entry_status < 2)
		},
		isShowOverBtn () {
			return (this.statusObj.view_time && this.statusObj.interview_status == 1 && this.check) ||
				(this.statusObj.entry_time && (this.statusObj.entry_status == 1 || this.statusObj.entry_status >2) && this.check)
		}
	}
	onLoad (options) {
		console.log(options)
		this.receiptType = Number(options.query) || Number(wx.getStorageSync('receiptType'))
		this.viewType = options.setTime || '1'
		console.log(this.viewType + '面试类型')
		this.job_id = options.job_id
		if (this.receiptType === 1) {
			this.title = '面试'
			this.params.job_id = options.job_id
		} else {
			this.title = '入职'
			this.params.jobId = options.job_id
		}
		this.$apply()
		wx.setNavigationBarTitle({
			title: this.getTitle(this.receiptType)
		})
	}
	onShow () {
		this.params.type = this.viewType
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.statusObj = JSON.parse(wx.getStorageSync('statusObj'))
		this.tabBarList = this.getTabBarList(this.receiptType)
		this.getCheckList()
		this.$apply()
	}
	events = {
		searchValue: val => {
			this.params = Object.assign(this.params, { where: val })
			this.getCheckList()
		},
		inputFocus: () => {
			this.isSeachWidth = true
			this.$apply()
		},
		switchTab: index => {
			this.activeIndex = index
			if (this.activeIndex) {
				this.params.status = index - 1
			} else {
				this.params.status = ''
			}
			this.getCheckList()
			this.$apply()
		},
		handleResume: data => {
			data.type = this.viewType
			console.log(data.status == 1 && this.viewType == 2 +'判断')
			if (data.status == 1 && this.viewType == 2) {
				this.modalHeight = 750
				this.checkObj = {
					status: data.status,
					id: data.id,
					type: data.type,
					uid: wx.getStorageSync('rendaUid')
				}
				this.id = data.id
				this.resume_id = data.resume_id
				this.isNoticeModal = !this.isNoticeModal
				this.$apply()
			} else {
				if (!this.statusObj.view_time&&this.receiptType!=3) {
					this.isNoticeModal = !this.isNoticeModal
					this.$apply()
					return
				} else {
					this.auditResumeRecommend(data)
				}
			}
		},
		handleResumeVideo: data => {
			let parasm = {
				room_name: wx.getStorageSync('phone'),
				room_num: data.room_num
			}
      let params1 = {
        jobId: this.job_id,
        time: data.room_num
      }
      wx.setStorageSync('viewList', JSON.stringify(params1))
			let text = this.viewType==1 ? '正常':'视频'
			wxShowModal('', `确定${text}面试吗?`).then(res => {
				this.getuserSig(parasm)
				// this.auditResumeRecommend(this.checkObj, params)
			}).catch(() => {
				console.log('取消')
			})
		},
		setAllTime: data => {
			let params = Object.assign(data, { uid: this.params.uid, job_id: this.job_id})
			if (this.viewType != 2) {
				this.setDate(params)
			} else {
				params.resume_list = this.resume_id
				this.setVideoNotice(params)
			}
		},
		selectResume: data => {
			if (this.viewType == 2 && data.id.length > 8) {
				return wxToast('视频面试最多选择8个简历')
			}
			if (data.id.length == this.newList.length) {
				this.isCheck = true
				this.$apply()
			}
			if (data && data.id.length) {
				this.id = data.id.join(',')
				this.resume_id = data.resume_id.join(',')
			}
		},
		viewDetail: data => {
			let query = `?resume_id=${data}`
			wx.navigateTo({
				url: '/pages/companyView/checkResumeDetail' + query
			})
		}
	}
	setDate (params) {
		$http(this.timeUrlApi, params).then(res => {
			if (res.data) {
				this.isNoticeModal = true
				this.$apply()
			} else {
				wxToast('设置时间失败')
			}
		})
	}
	setVideoNotice (params) {
		$http('/company/setVideoInterviewTime', params).then(res => {
			if (res.data) {
				this.auditResumeRecommend(this.checkObj, params)
			} else {
				wxToast('设置失败')
			}
		})
	}
	getuserSig (params) {
		$http('/Tencentcloud/createQuanjian', { name: params.room_name }).then(res => {
			params.userSig = res.data
			this.routerView(params)
		})
	}
	routerView (params) {
		const url = `/pages/room/room?roomID=${params.room_num}` +
			`&userSig=${params.userSig}` +
			`&template=grid&debugMode=false&cloudenv=PRO` +
			`&localVideo=true` +
			`&localAudio=true` +
			`&enableEarMonitor=false` +
			`&enableAutoFocus=true` +
			`&localMirror=auto` +
			`&enableAgc=true` +
			`&enableAns=true` +
			`&encsmall=true` +
			`&frontCamera=front` +
			`&videoWidth=360` +
			`&videoHeight=640` +
			`&scene=rtc` +
			`&userID=${params.room_name}` +
			`&minBitrate=600&maxBitrate=900`
		wx.navigateTo({
			url: url,
		})
	}
	auditResumeRecommend (params, obj) {
		params.type = this.viewType
		console.log(params)
		$http(this.checkUrlAPI, params).then(res => {
			if (res.data) {
				if (obj) {
					this.getuserSig(obj)
					return
				}
				if (this.isCheck || this.check) {
					if (this.receiptType === 1) {
						this.statusObj.invoice_status = 4
						this.isNoticeModal = false
						if (this.viewType == 1) {
							this.modalHeight = 930
						} else {
							this.modalHeight = 750
						}
					}
					if (this.receiptType === 2) {
						this.statusObj.interview_status = 4
					}
					this.isBatch = false
					this.$apply()
				}
				this.getTotal(this.tabBarList)
				this.getCheckList()
			} else {
				wxToast('操作失败')
			}
		})
	}
	overInterview () {
		let params = {
			jobId: this.job_id,
			uid: this.params.uid
		}
		$http(this.overViewAndEntry, params).then(res => {
			if (res.data) {
				if (this.receiptType === 1) {
					this.statusObj.invoice_status = 2
				}
				if (this.receiptType === 2) {
					this.statusObj.interview_status = 2
				}
				this.$apply()
				wx.setStorageSync('receiptType', this.receiptType)
				wx.setStorageSync('statusObj', JSON.stringify(this.statusObj))
				wxNavigateTo('/pages/companyView/resumeSiftings?query=' + this.receiptType)
			} else {
				wxToast('操作失败')
			}
		})
	}
	methods = {
		switchView (index) {
			this.viewType = index
			this.params.type = this.viewType
			this.$apply()
			this.getCheckList()
			this.getTotal(this.tabBarList)
		},
		batchHandle () {
			if (this.receiptType != 2) {
				if (this.viewType==1&&!this.statusObj.view_time&&this.receiptType!=3) {
					this.isNoticeModal = !this.isNoticeModal
					return
				}
				this.isBatch = true
				this.list = this.checkAll(this.list, false)
				this.$apply()
			} else {
				wxNavigateTo('/pages/companyView/noticeRecord?jobId=' + this.job_id)
			}
    },
		viewNotice () {
			if (this.viewType !=2 ||(this.receiptType==2&&this.statusObj.is_video)) {
				this.viewTimeInfo()
			} else {
				wxNavigateTo('/pages/companyView/noticeRecord?jobId=' + this.job_id)
			}
		},
		selectResumeAll (check) {
			this.isCheck = !check
			this.list = this.checkAll(this.list, this.isCheck)
			let arr = this.list.map(item => {
				if (item.disabled) {
					return item.id
				}
			})
			let arr1 = this.list.map(item => {
				if (item.disabled) {
					return item.resume_id
				}
			})
			if (arr.length) {
				this.id = arr.join(',')
			}
			if (arr1.length) {
				this.resume_id = arr1.join(',')
			}
			this.$apply()
		},
		overView () {
			let text = this.receiptType === 1 ? '面试' : '入职'
			wxShowModal('', `确定提前结束${text}`).then(res => {
				this.overInterview()
			}).catch(() => {
				console.log('取消')
			})
		},
		setResumeStatus (status) {
			if (!this.isCheck || !this.id) {
				return wxToast('请选择简历')
			}
			let parasm = {
				status,
				uid: wx.getStorageSync('rendaUid'),
				id: this.id,
				type: this.viewType
			}
			if (status == 1 && this.viewType == 2) {
				this.modalHeight = 750
				this.checkObj = parasm
				this.isNoticeModal = !this.isNoticeModal
				this.$apply()
			} else {
				this.auditResumeRecommend(parasm)
			}
		},
		setNotice () {
			if (!this.isCheck || !this.resume_id) {
				return wxToast('请选择简历')
			}
			this.modalHeight = 750
			this.isNoticeModal = !this.isNoticeModal
			this.$apply()
		},
		viewEntry () {
			wx.setStorageSync('receiptType', 3)
			wxNavigateTo('/pages/companyView/resumeSiftings?query=3&jobId=' + this.job_id)
		}
	}
	checkAll (list, status) {
		return list.filter(item => {
			if (!item.status || (!item.is_time&&this.viewType==2)) {
				item.disabled = status
				return item
			}
		})
	}
	getTabBarList (val) {
		let arr = []
		let arr1 = [
			{ name: '全部简历', num: 0 },
			{ name: '待审核', num: 0 }]
		if (val === 1) {
			arr = [
				{ name: '已同意', num: 0 },
				{ name: '已拒绝', num: 0 }]
		} else if (val === 2) {
			arr = [
				{ name: '已通过', num: 0 },
				{ name: '未通过', num: 0 }]
		} else {
			arr = [
				{ name: '已入职', num: 0 },
				{ name: '未入职', num: 0 }]
		}
		let newArr = arr1.concat(arr)
		this.getTotal(newArr)
		return newArr
	}
	getTotal (arr) {
		let params = {
			uid: this.params.uid,
			job_id: this.job_id,
			type: this.receiptType
		}
		if (this.receiptType != 3) {
			params.view_type = this.viewType
		}
		$http('/company/getAuditResumeNum', params).then(res => {
			if (res.data) {
				arr[0].num = res.data.allNum
				arr[1].num = res.data.auditedNum
				arr[2].num = res.data.adoptNum
				arr[3].num = res.data.referNum
				this.$apply()
			}
		})
	}
	// 查看面试和入职时间
	viewTimeInfo () {
		$http('/company/selectInterviewEntryInfo', { id: this.job_id }).then(res => {
			let query = {}
			this.viewType = '1'
			if (this.receiptType === 1) {
				query = {
					time: res.data.view_time,
					content: res.data.content,
					provinceid: res.data.interview_provinceid,
					cityid: res.data.interview_cityid,
					three_cityid:  res.data.interview_three_cityid
				}
			} else {
				query = {
					time: res.data.entry_time,
					content: res.data.entry_comtent,
					provinceid: res.data.entry_provinceid,
					cityid: res.data.entry_cityid,
					three_cityid: res.data.entry_three_cityid
				}
			}
			this.modalHeight = 930
			this.timeInfo = query
			this.isNoticeModal = !this.isNoticeModal
			this.$apply()
		})
	}
	getCheckList () {
		$http(this.urlApi, this.params).then(res => {
			this.list = res.data.data || []
			let check = this.list.some(item => {
				if (!item.is_time) {
					return false
				}
			})
			if (this.receiptType) {
				this.check = this.checkStatus(this.list, this.receiptType)
			}
			// this.tabBarList[this.activeIndex].num = this.list.length
			this.count = res.data.count
			this.$apply()
		})
	}
	checkStatus (list, type) {
		let status = ''
		if (type === 1) {
			status = 'status'
		} else if (type == 2) {
			status = 'interview_status'
		} else {
			status = 'entry_status'
		}
		return list.every(item => {
			return item[status]
		})
	}
	getTitle (val) {
		return val === 1 ? '简历列表' : val === 2 ? '面试审核' : '入职审核'
	}
}
</script>