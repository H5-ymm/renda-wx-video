<style lang="less">
@import "../../../style/home.less";
</style>
<template>
	<view class="home-view">
		<view class="home-view-header"></view>
		<view class="page_margin page">
			<scroll-view scroll-y="true" style="height:100%">
				<view class="home-view-box">
					<search @searchValue="searchValue" class="weui-cell weui-flex start page_card"></search>
					<invoiceList :list.sync="newList" :recommendType.sync="recommendType" @handleJob="handleJob" @selectJob="selectJob">
					</invoiceList>
				</view>
			</scroll-view>
		</view>
  	<viewNoticeModal :isScaleModal.sync="isModal" :height.sync="modalHeight" :timeInfo.sync="timeInfo" :title.sync="title"></viewNoticeModal>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import search from '@/components/search'
import invoiceList from '@/components/invoiceList'
import viewNoticeModal from '@/components/viewNoticeModal'
import { getList, wxNavigateTo, wxShowModal, wxToast, wxReLaunch, wxRedirectTo } from '@/util'
export default class checkResumeList extends wepy.page {
	components = {
		search: search,
		invoiceList: invoiceList,
		viewNoticeModal: viewNoticeModal
	}
	data = {
		list: [],
		params: {
			uid: '',
			page: 1,
			limit: 10
		},
		count: 0,
		isSeachWidth: false,
		isModal: true,
		modalHeight: 860,
		title: '查看面试时间',
		recommendType: 0,
		job_id: '',
		timeInfo: {},
		id: '',
		recommendId: ''
	}
	computed = {
		newList() {
			return getList(this.list, 'addtime')
		},
		urlApi() {
			return this.recommendType ? '/apply/add_put' :'/teamjob/add_put'
		}
	}
	config = {
		navigationBarTitleText: '内部发单'
	}
	onLoad(options) {
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.recommendType = Number(options.query)
		this.recommendId = options.recommendId
		this.id = options.resumeId
		this.$apply()
		wx.setNavigationBarTitle({
			title: this.getTitle(this.recommendType)
		})
	}
	onShow() {
		this.getList()
		this.$apply()
	}
	events = {
		searchValue: val => {
			this.params = Object.assign(this.params, { where: val })
			this.getList()
		},
		inputFocus: () => {
			this.isSeachWidth = true
			this.$apply()
		},
		handleJob: data => {
			let params = {}
			if (this.recommendType) {
				params = {
					uid: this.params.uid,
					resume_id: this.id,
					apply_id: data.id
				}
			} else {
				params = {
					uid: this.params.uid,
					resume_id: this.id,
					job_id: data.id
				}
			}
			wxShowModal('', '确定推荐岗位吗?', '确定').then(res => {
				this.recommend(params)
			}).catch(() => {
				console.log('取消')
			})
		},
		selectJob: val =>{
			let url = ''
			if (!this.recommendType) {
				url = 'insiderJobDetail'
			} else {
				wx.setStorageSync('receiptType',-1)
				url = 'teamJobDetail'		
			}
			wx.redirectTo({
				url: `/pages/teamView/internalInvoice/${url}?query=${val.id}&resume_id=${this.id}`
			})
		}
	}
	recommend(params) {
    $http(this.urlApi, params).then(res => {
      if (res.data) {
				wxToast(res.data || '推荐成功')
				wxNavigateTo('/pages/home/index')
			} else {
				wxToast('推荐失败')
			}
    })
  }
	getGeportOrderList() {
		$http('/Wxresume/reportOrderList', this.params).then(res => {
			this.list = res.data.data || []
			this.count = res.data.count
			this.$apply()
		})
	}
	getInternalInvoiceList() {
		$http('/Wxresume/internalInvoiceList', this.params).then(res => {
			this.list = res.data.data || []
			this.count = res.data.count
			this.$apply()
		})
	}
	getList() {
		if (this.recommendType == 1) {
			this.getGeportOrderList()
		} else {
			this.getInternalInvoiceList()
		}
	}
	getTitle(val) {
		return val == 1 ? '团队接单' : '内部发单'
	}
	methods = {
	
	}
}
</script>