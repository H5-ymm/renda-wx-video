<style lang="less">
@import '../../../style/home.less';
@import '../../../style/resume.less';
.resume-list {
  .page_card_row {
    line-height: 40rpx;
  }
}
.page_card_end {
  .page_card_time {
    width: 100%;
    text-align: right;
    font-size: 22rpx;
    color: #999;
  }
  .page_card_status-resume {
    width: 70%;
    .page_card_status-item {
      width: 100%;
    }
    .weui-btn_cell {
      margin-bottom: 40rpx;
    }
    .page_card_receipt_status {
      text-align: center;
    }
  }
  .page_card_status-text {
    height: 80rpx;
  }
}
</style>
<template>
	<view class="detail-view">
		<view class="weui-flex between header-box">
			<tabBar :tabBarList.sync="tabBarList" wx:if="{{!isSeachWidth}}"></tabBar>
			<search class="search-box {{isSeachWidth?'weui-flex__item':''}}" @searchValue="searchValue">
			</search>
		</view>
		<view class="page_margin view-detail person-list">
			<scroll-view scroll-y="true" style="height:100%">
				<teamResumeList :list.sync="newList" :receiptType.sync="receiptType">
				</teamResumeList>
			</scroll-view>
		</view>
		<view class="only-btn" wx:if="{{list.length}}">
			<view class="weui-flex center">
				<button class="weui-btn_cell only-btn-item {{!receiptTime?'weui-btn_cell-disabled':'weui-btn_primary'}}" disabled="{{!receiptTime}}" @tap="viewNotice">
					{{receiptType==2?'查看面试通知':'查看入职通知'}}
				</button>
				<button class="weui-btn_cell only-btn-item weui-btn_primary_plain" @tap="recommendResume">
					推荐简历
				</button>
			</view>
		</view>
	<!-- </view> -->
	 <viewNoticeModal :isScaleModal.sync="isModal" :height.sync="modalHeight" :timeInfo.sync="timeInfo" :title.sync="title"></viewNoticeModal>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import tabBar from '@/components/tabBar'
import search from '@/components/search'
import teamResumeList from '@/components/teamResumeList'
import viewNoticeModal from '@/components/viewNoticeModal'
import { getList, wxNavigateTo, wxShowModal, wxToast, wxReLaunch, wxRedirectTo } from '@/util'
export default class viewResumeList extends wepy.page {
	components = {
		tabBar: tabBar,
		search: search,
		teamResumeList: teamResumeList,
		viewNoticeModal: viewNoticeModal
	}
	data = {
		tabBarList: [{ name: '全部简历', num: 0 },
		{ name: '待审核', num: 0 },
		{ name: '已同意', num: 0 },
		{ name: '已拒绝', num: 0 }],
		list: [],
		params: {
			uid: '',
			job_id: '',
			status: 0,
			type: ''
		},
		count: 0,
		activeIndex: 0,
		isSeachWidth: false,
		isModal: true,
		modalHeight: 860,
		title: '面试时间',
		receiptType: 2,
		job_id: '',
		timeInfo: {},
		id: '',
		receiptTime: '',
		apply_id: ''
	}
	computed = {
		newList () {
			return getList(this.list, 'addtime')
		},
		// 获取简历初筛，面试名单，入职名单列表url
		viewAndEntryNotice () {
			return this.receiptType === 2 ? '/apply/getViewtime' : '/apply/getOffermsg'
		}
	}
	onLoad (options) {
		this.receiptType = Number(options.query)
		this.params.type = this.receiptType - 1
		this.job_id = options.id
		this.apply_id = options.apply_id
		this.params.job_id = options.id
		this.receiptTime = wx.getStorageSync('receiptTime')
		console.log(this.receiptTime)
		this.$apply()
		wx.setNavigationBarTitle({
			title: this.getTitle(this.receiptType)
		})
	}
	onShow () {
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.getCheckList()
		this.$apply()
	}
	events = {
		searchValue: val => {
			this.params = Object.assign(this.params, { where: val })
			this.getCheckList()
		},
		inputFocus: () => {
			this.isSeachWidth = true
			this.$apply()
		},
		switchTab: index => {
			this.activeIndex = index
			this.params.status = index
			this.getCheckList()
			this.$apply()
		}
	}
	methods = {
		recommendResume () {
			wxRedirectTo('/pages/home/index')
		},
		viewNotice () {
			this.viewTimeInfo()
		}
	}
	// 查看面试和入职时间
	viewTimeInfo () {
		$http(this.viewAndEntryNotice, { apply_id: this.apply_id }).then(res => {
			let query = {}
			if (this.receiptType === 2) {
				query = {
					time: res.data.view_time,
					content: res.data.content
				}
			} else {
				query = {
					time: res.data.entry_time,
					content: res.data.entry_comtent
				}
			}
			this.timeInfo = query
			this.isModal = !this.isModal
			this.$apply()
		})
	}
	getCheckList () {
		$http('/apply/getList_resume', this.params).then(res => {
			this.list = res.data.data || []
			let arr = res.data.num || []
			arr.forEach((item, index) => {
				this.tabBarList[index].num = item
			})
			this.count = res.data.count
			this.$apply()
		})
	}
	getTitle (val) {
		return val === 2 ? '简历列表' : val === 3 ? '面试审核' : '入职审核'
	}
}
</script>