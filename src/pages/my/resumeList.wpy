<style lang="less">
@import '../../style/list.less';
.page {
  &.resume_view {
     border-top: 1px solid #F0F2FA;
    .page__text__active {
      font-size: 30rpx; 
    }
    .page__title {
      font-size: 26rpx;  
    }
  }
  .time {
    font-size: 26rpx; 
  }
}
</style>
<template>
	<view class="page page_top resume_view">
    <scroll-view scroll-y="true" @scrolltolower="searchScrollLower" class="page">
      <view class="home-view-box">
        <repeat wx:for="{{list}}" wx:key="index">
          <view class="list-row" wx:if="{{list.length}}" @tap="selectJob({{index}},{{item}})">
            <view class="list-col-1">
              <view class="weui-flex between">
                <view class="page__text__active">应聘职位：{{item.job_name}} {{item.salary}}</view>
                <view class="time">{{item.addtime}}</view>
              </view>
              <view class="page__title">
                <view class="page__title">{{item.nickname}}</view>
                <view class="page__title">{{item.sex==1?'男':'女'}}/{{item.age}}</view>          
              </view>
              <view class="weui-flex between">
                <view class="page__title weui-flex__item">{{item.edu}}</view>
                 <button class="weui-btn_cell weui-btn_primary">
                  立即沟通
                </button>
              </view>
            </view>
          </view>
        </repeat>
        <view wx:if="{{!list.length}}" class="page_list">
          <image src="../../images/noData.png" class="page_noData" mode="scaleToFill" />
          <view class="page_noData_text">暂无数据！</view>
        </view>
      </view>
    </scroll-view>
 </view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
export default class resumeList extends wepy.page {
  data = {
    list: [],
    activeIndex: 0,
    resumeType: '',
    params: {
      uid: '',
      page: 1,
      limit: 10
    },
    count: 0
  }
  config = {
    navigationBarTitleText: '应聘简历'
  }
  getGeportOrderList () {
    $http('/Wxresume/reportOrderList', this.params).then(res => {
      this.list = res.data.data || []
      this.count = res.data.count
      this.$apply()
    })
  }
  getInternalInvoiceList () {
    $http('/Wxresume/internalInvoiceList', this.params).then(res => {
      this.list = res.data.data || []
      this.count = res.data.count
      this.$apply()
    })
  }
 methods = {
    viewInfo (item) {
      wx.navigateTo({
        url: item.url
      })
    },
    switchView(index) {
      this.hallType = index
      this.$apply()
    },
    viewDetail(item) {
      wxNavigateTo('/pages/companyView/viewJob?query=' +item.id + '&apply=1')
    },
    searchScrollLower () {
			if (this.count > this.list.length && this.count > this.params.limit) {
				this.params.limit = this.params.limit + 10
				this.getReceiptList()
			}
    },
    showModal(index){
      this.activeIndex = index
      this.$apply()
    },
    applyRecepit(item) {
      let params = {
        job_id: item.id,
        uid: this.params.uid
      }
      this.setReceipt(params)
    }
  }
  getResumeList () {
    $http('/Companyjob/getresume_list', this.params).then(res => {
      let arr = []
      arr = res.data.data ? res.data.data : []
      arr.forEach(item=>{
        item.addtime = $moment.unix(item.addtime).format('MM-DD HH:ss')
      })
      this.list = arr
      this.count = res.data.count
      this.$apply()
    })
  }
  onLoad(options) {
    this.isScaleModal = false
    this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
    this.$apply()
  }
  onShow () {
    this.getResumeList()
  }
}
</script>
