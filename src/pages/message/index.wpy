<style lang="less">
// @import '../../style/resume.less';
.message-view {
  background: #fff;
  .view-content {
    margin: 0 30rpx;
  }
  .message-row {
    font-size: 32rpx;
    color: #333;
  }
  .message-col-1 {
    width: 120rpx;
    height: 120rpx;
    border-radius: 50%;
    background: #eeeeee;
    position: relative;
    .message-col-header {
      height: 100%;
      width: 100%;
      border-radius: 50%;
      border: 1px solid rgba(24, 144, 255, 0.2);
    }
    .bage {
      width: 16rpx;
      height: 16rpx;
      color: #fff;
      background: #f41800;
      border-radius: 50%;
      position: absolute;
      top: 8rpx;
      right: 0;
    }
  }
  .message-col-2 {
    // line-height: 50rpx;
    margin-left: 20rpx;
    padding: 30rpx 0;
    .message-col-small {
      font-size: 26rpx;
    }
    .message-col-time {
      margin-top: 10rpx;
    }
  }
}
</style>
<template>
	<view class="message-view shadow page">
		<view class="page_margin view-content">
			<scroll-view scroll-y="true" style="height:100%" wx:if="{{newList.length}}" @scrolltolower="searchScrollLower">
				<repeat wx:for="{{newList}}" wx:key="index">
					<view class="weui-flex start message-row" @tap="viewMessage({{item}})">
						<view class="message-col-1">
							<image mode="scaleToFill" src="../../images/header.png" class="message-col-header" wx-if="{{!item.avatar}}" />
							<image mode="scaleToFill" src="{{item.avatar}}" class="message-col-header" wx-if="{{item.avatar}}" />
						</view>
						<view class="weui-flex between-start wrap message-col-2 weui-flex__item page_bottom">
							<view>
								<view class="page__title">{{item.nick}}</view>
								<view class="message-col-small page__desc">{{item.messageForShow}}</view>
							</view>
							<view class="message-col-small message-col-time page__desc">{{item.lastTime}}</view>
						</view>
					</view>
				</repeat>
			</scroll-view>
			<view wx:else class="page_list" >
				<image src="http://www.ttxsg.com.cn:39009/uploads/images/noData.png" class="page_noData" mode="scaleToFill" />
				<view class="page_noData_text">暂无消息！</view>
		   </view>
		</view>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import TIM from 'tim-wx-sdk'
// import TIM from '@/lib/tim-wx.js'
import COS from 'cos-wx-sdk-v5'
import { getImgUrl, wxNavigateTo, getList } from '@/util.js'
const tim = TIM.create({
	SDKAppID: 1400335565
})
tim.setLogLevel(0)
tim.registerPlugin({ 'cos-wx-sdk': COS });
export default class message extends wepy.page {
	data = {
		teamData: {},
		rendaUserTeamType: 0,
		params: {
			uid: ''
		},
		list: [],
		count: 0
	}
	config = {
		navigationBarTitleText: '消息管理'
	}
	computed = {
		urlApi() {
			return this.usertype == 1 ? '/personinfo/getcom_msglist' : '/personinfo/getMsg'
		},
		newList() {
			return getList(this.list, 'lastTime', 'YYYY-MM-DD HH:mm')
		}
	}
	onShow() {
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.getUserSig()
	}
	getUserSig() {
		$http('/autograph/getAutograph', { uid: this.params.uid }).then(res => {
			let promise = tim.login({ userID: this.params.uid + '', userSig: res.data });
			promise.then(imResponse => {
				console.log('登录成功');
				if (imResponse.data.repeatLogin === true) {
					// 标识账号已登录，本次登录操作为重复登录。v2.5.1 起支持
				}
			}).catch(imError => {
				console.warn('login error:', imError); // 登录失败的相关信息
			});
			let onSdkReady = event=> {
				let promise1 = tim.getConversationList();
				promise1.then(imResponse => {
					const conversationList = imResponse.data.conversationList; // 会话列表，用该列表覆盖原有的会话列表
					let arr = conversationList.map(item=>{
						console.log(item)
						const { lastMessage, userProfile, conversationID } = item
						let obj = {
							lastTime: lastMessage.lastTime,
							messageForShow:lastMessage.messageForShow,
							nick: userProfile.nick,
							avatar: userProfile.avatar,
							userID: userProfile.userID,
							conversationID: conversationID
						}
						return obj
					})
					console.log(arr)
					this.list = arr
					this.$apply()
				}).catch(function (imError) {
					console.warn('getConversationList error:', imError); // 获取会话列表失败的相关信息
				});
			};
			tim.on(TIM.EVENT.SDK_READY, onSdkReady);
		})
	}
	methods = {
		viewMessage(item) {
			if (this.usertype == 1) {
				wxNavigateTo('/pages/message/dialogBox?query=' + item.id)
			} else {
				wxNavigateTo('/pages/message/personalDialogBox?query=' + item.conversationID+ '&userID=' + item.userID + '&isLogin=true')
			}
		},
		searchScrollLower() {
			if (this.count > this.list.length && this.count > this.params.limit) {
				this.params.limit = this.params.limit + 10
			}
		}
	}
}
</script>